openapi: 3.0.0

info:
  version: "3.1.2"
  title: "BioGenome Portal API"
  contact:
    email: "emilio.righi@crg.eu"

servers:
  - url: https://ebp.biogenoma.cat/api
    description: server containing all the data submitted to INSDC under the EBP umbrella
  - url: https://data.biogenoma.cat/api
    description: server containing all the data generated under the CBP umbrella 

tags:
- name: "organisms"
- name: "assemblies"
- name: "experiments"
- name: "taxons"
- name: "biosamples"
- name: "local_samples"
- name: "annotations"
- name: "goat_report"
- name: "taxonomy"
- name: "stats"

paths:
  /goat_report:
    get:
      tags: 
        - "goat_report"
      summary: "retrieve GoaT report of organisms' sequencing status"
      responses:
        "200":
          description: "successful operations"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoaTReport"
            text/tab-separated-values:
              schema:
                type: string
                format: binary

  /stats:
    get:
      tags: 
        - "stats"
      summary: "Database stats"
      responses:
        "200":
          description: "successful operations"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  assemblies:
                    type: "number"
                  annotations:
                    type: number
                  biosamples:
                    type: number
                  local_samples:
                    type: number
                  experiments:
                    type: number
                  organisms:
                    type: number
                  taxons:
                    type: number
  /stats/{model}:
    get:
      tags: 
        - "stats"
      summary: "get object properties statistics"
      parameters:
        - in: 'path'
          name: 'model'
          required: true
          schema:
            type: "string"
            enum:
            - "assemblies"
            - "annotations"
            - "biosamples"
            - "local_samples"
            - "experiments"
            - "organisms"
            - "taxons"
        - in: 'query'
          name: 'field'
          required: true
          schema:
            type: string
        - in: 'query'
          name: 'query'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "successfull operations"
          content:
            application/json:
              schema:
                type: object

  /tree:
    get:
      tags:
        - "taxonomy"
      summary: "retrieve all the taxons contained in the database in a taxonomic tree"
      responses:
        "200":
          description: "successful operations"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TreeNode"
            
  /tree/{taxid}:
    get:
      tags:
        - "taxonomy"
      summary: "generate a tree using the provided taxid as root"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TreeNode"
        "404":
          description: "Taxon not found"

  /tree/{taxid}/relative:
    get:
      tags:
        - "taxonomy"
      summary: "Get the closest taxons, with a specific insdc submission status, to the taxid provided,"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:
            type: "string"
        - in: 'query'
          name: 'insdc_status'
          schema:
            allOf:
              - $ref: '#/components/schemas/INSDCStatus'
            default: "Assemblies Submitted"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TreeNode"
        "404":
          description: "Taxon not found"
  # /spreadsheet_upload:
  #   post:
  #     tags:
  #       - "spreadsheet upload"
  #     summary: "Endpoint for local sample creation from spexperimentsheet file"
  #     requestBody:
  #       content:
  #         multipart/form-data:
  #           schema:
  #             type: "object"
  #             properties:
  #               excel:
  #                 type: "string"
  #                 format: "binary"
  #                 nullable: true
  #               id:
  #                 type: "string"
  #                 description: "Unique identifier of the local sample"
  #               taxid:
  #                 type: "string"
  #               scientific_name:
  #                 type: "string"
  #               source:
  #                 type: "string"
  #               option:
  #                 type: "string"
  #                 default: "SKIP"
  #                 enum:
  #                   - "SKIP"
  #                   - "UPDATE"
  #                 description: "Skip or update existing sample"
  #               header:
  #                 type: "number"
  #                 description: "row number 1-based of the header"
  #     responses:
  #       "200":
  #         description: "samples correctly uploaded"
  #       "400":
  #         description: "Invalid fields"

  /organisms:
    get:
      tags:
        - "organisms"
      summary: "Endpoint to retrieve a paginated list of organisms"
      parameters:
        - in: 'query'
          name: 'parent_taxid'
          schema:
            type: 'string'
        - in: 'query'
          name: 'filter'
          schema:
            type: 'string'
        - in: 'query'
          name: 'filter_option'
          schema:
            type: "string"
            default: "scientific_name"
            enum:
            - "taxid"
            - "common_name"
            - "tolid"
            - "scientific_name"
        - in: "query"
          name: "country"
          schema:
            type: "string"
          description: "country code"
        - in: 'query'
          name: 'sort_order'
          schema:
            type: 'string'
            enum:
            - "asc"
            - "desc"
        - in: 'query'
          name: 'sort_column'
          schema:
            type: 'string'
            enum:
            - "scientific_name"
            - "taxid"
            - "tolid"
        - in: 'query'
          name: 'goat_status'
          schema:
            $ref: '#/components/schemas/GoaTStatus'
        - in: 'query'
          name: 'insdc_status'
          schema:
            $ref: '#/components/schemas/INSDCStatus'
        - in: 'query'
          name: 'target_list_status'
          schema:
            $ref: '#/components/schemas/TargetListStatus'
        - in: 'query'
          name: 'offset'
          schema:
            type: 'number'
            default: 0
        - in: 'query'
          name: 'limit'
          schema:
            type: 'number'
            default: 20
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Organism"
                  total:
                    type: "number"

  /organisms/{taxid}:
    get:
      tags:
        - "organisms"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organism"
        "404":
          description: "Organism not found"

  /organisms/{taxid}/lineage:
    get:
      tags:
        - "organisms"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TreeNode"
        "404":
          description: "Organism not found"

  /organisms/{taxid}/biosamples:
    get:
      tags:
        - "organisms"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/BioSample"
        "404":
          description: "Organism not found"

  /organisms/{taxid}/local_samples:
    get:
      tags:
        - "organisms"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/LocalSample"
        "404":
          description: "Organism not found"

  /organisms/{taxid}/assemblies:
    get:
      tags:
        - "organisms"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Assembly"
        "404":
          description: "Organism not found"

  /organisms/{taxid}/experiments:
    get:
      tags:
        - "organisms"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Experiment"
        "404":
          description: "Organism not found"

  /organisms/{taxid}/annotations:
    get:
      tags:
        - "organisms"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Annotation"
        "404":
          description: "Organism not found"

  /organisms/{taxid}/coordinates:
    get:
      tags:
        - "organisms"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/SampleCoordinates"
        "404":
          description: "Organism not found"
                                 
  /assemblies:
    get:
      tags:
        - "assemblies"
      summary: "Endpoint to retrieve a paginated list of assemblies"
      parameters:
        - in: 'query'
          name: 'filter'
          schema:
            type: 'string'
        - in: 'query'
          name: 'filter_option'
          schema:
            type: "string"
            enum:
            - "taxid"
            - "scientific_name"
            - "assembly_name"
        - in: 'query'
          name: 'assembly_level'
          schema:
            type: "string"
            enum:
            - "Chromosome"
            - "Complete Genome"
            - "Contig"
            - "Scaffold"
        - in: 'query'
          name: 'start_date'
          schema:
            type: "string"
        - in: 'query'
          name: 'end_date'
          schema:  
            type: "string"
        - in: 'query'
          name: 'submitter'
          schema:  
            type: "string"
        - in: 'query'
          name: 'sort_order'
          schema:  
            type: "string"
            enum:
            - "asc"
            - "desc"
        - in: 'query'
          name: 'sort_column'
          schema:
            type: "string"
            enum:
            - "contig_n50"
            - "size"
            - "submission_date"
        - in: 'query'
          name: 'offset'
          schema:
            type: 'number'
            default: 0
        - in: 'query'
          name: 'limit'
          schema:
            type: 'number'
            default: 20
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Assembly"
                  total:
                    type: "number"

  /assemblies/{accession}:
    get:
      tags:
        - "assemblies"
      parameters:
        - in: 'path'
          name: 'accession'
          required: true
          schema:
            type: 'string'
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assembly"
        "404":
          description: "Assembly not found"

  /assemblies/{accession}/annotations:
    get:
      tags:
        - "assemblies"
      parameters:
        - in: 'path'
          name: 'accession'
          required: true
          schema:
            type: 'string'
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Annotation"
        "404":
          description: "Assembly not found"

  /experiments:
    get:
      tags:
        - "experiments"
      summary: "Endpoint to retrieve a paginated list of experiments"
      parameters:
        - in: 'query'
          name: 'filter'
          schema:
            type: 'string'
        - in: 'query'
          name: 'filter_option'
          schema:
            type: "string"
            enum:
            - "taxid"
            - "scientific_name"
            - "instrument_platform"
            - "experiment_title"
        - in: 'query'
          name: 'start_date'
          schema:
            type: "string"
        - in: 'query'
          name: 'end_date'
          schema:
            type: "string"
        - in: 'query'
          name: 'sort_order'
          schema:  
            type: "string"
            enum:
            - "asc"
            - "desc"
        - in: 'query'
          name: 'sort_column'
          schema:
            type: "string"
            enum:
            - "first_created"
        - in: 'query'
          name: 'center'
          schema:
            type: 'string'
        - in: 'query'
          name: 'offset'
          schema:
            type: 'number'
            default: 0
        - in: 'query'
          name: 'limit'
          schema:  
            type: 'number'
            default: 20
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Experiment"
                  total:
                    type: "number"
        "405":
          description: "Invalid input"

  /experiments/{accession}:
    get:
      tags:
        - "experiments"
      parameters:
        - in: 'path'
          name: 'accession'
          schema:
            type: 'string'
          required: true
          
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment"
        "404":
          description: "Read not found"
                
  /biosamples:
    get:
      tags:
        - "biosamples"
      summary: "Endpoint to retrieve a paginated list of biosamples"
      parameters:
        - in: 'query'
          name: 'filter'
          schema:
            type: 'string'
        - in: 'query'
          name: 'filter_option'
          schema:
            type: "string"
            enum:
            - "taxid"
            - "scientific_name"
            - "gal"
            - "habitat"
            - "accession"
        - in: 'query'
          name: 'start_date'
          schema:  
            type: "string"
        - in: 'query'
          name: 'end_date'
          schema:  
            type: "string"
        - in: "query"
          name: "sort_column"
          schema:
            type: "string"
            enum:
              - "collection_date"
        - in: 'query'
          name: 'sort_order'
          schema:  
            type: "string"
            enum:
            - "asc"
            - "desc"
        - in: 'query'
          name: 'offset'
          schema:
            type: 'number'
            default: 0
        - in: 'query'
          name: 'limit'
          schema:
            type: 'number'
            default: 20
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/BioSample"
                  total:
                    type: "number"
        "405":
          description: "Invalid input"
          
  /biosamples/{accession}:
    get:
      tags:
        - "biosamples"
      parameters:
        - in: 'path'
          name: 'accession'
          schema:
            type: 'string'
          required: true
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BioSample"
        "404":
          description: "Read not found"

  /biosamples/{accession}/sub_samples:
    get:
      tags:
        - "biosamples"
      parameters:
        - in: 'path'
          name: 'accession'
          schema:
            type: 'string'
          required: true
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/BioSample"
        "404":
          description: "Read not found"

  /biosamples/{accession}/experiments:
    get:
      tags:
        - "biosamples"
      parameters:
        - in: 'path'
          name: 'accession'
          schema:
            type: 'string'
          required: true
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Experiment"
        "404":
          description: "Read not found"

  /biosamples/{accession}/assemblies:
    get:
      tags:
        - "biosamples"
      parameters:
        - in: 'path'
          name: 'accession'
          schema:
            type: 'string'
          required: true
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Assembly"
        "404":
          description: "Read not found"

  /biosamples/{accession}/coordinates:
    get:
      tags:
        - "biosamples"
      parameters:
        - in: 'path'
          name: 'accession'
          schema:
            type: 'string'
          required: true
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SampleCoordinates"
        "404":
          description: "Read not found"
             
  /local_samples:
    get:
      tags:
        - "local_samples"
      summary: "Endpoint to retrieve a paginated list of local_samples"
      parameters:
        - in: 'query'
          name: 'filter'
          schema:
            type: 'string'
        - in: 'query'
          name: 'filter_option'
          schema:
            type: "string"
            enum:
            - "taxid"
            - "scientific_name"
        - in: "query"
          name: "sort_column"
          schema:
            type: "string"
            enum:
              - "created"
        - in: 'query'
          name: 'sort_order'
          schema:  
            type: "string"
            enum:
            - "asc"
            - "desc"
        - in: 'query'
          name: 'start_date'
          schema:  
            type: "string"
        - in: 'query'
          name: 'end_date'
          schema:  
            type: "string"
        - in: 'query'
          name: 'offset'
          schema:
            type: 'number'
            default: 0
        - in: 'query'
          name: 'limit'
          schema:
            type: 'number'
            default: 20
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/LocalSample"
                  total:
                    type: "number"
        "405":
          description: "Invalid input"

  /local_samples/{id}:
    get:
      tags:
        - "local_samples"
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          schema:
            type: 'string'
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalSample"
        "404":
          description: "local sample not found"

  /local_samples/{id}/coordinates:
    get:
      tags:
        - "local_samples"
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          schema:
            type: 'string'
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SampleCoordinates"
        "404":
          description: "local sample not found"
                 
  /annotations:
    get:
      tags:
        - "annotations"
      summary: "Endpoint to retrieve a paginated list of genomic annotations"
      parameters:
        - in: 'query'
          name: 'filter'
          schema:
            type: 'string'
        - in: 'query'
          name: 'offset'
          schema:
            type: 'number'
            default: 0
        - in: 'query'
          name: 'limit'
          schema:
            type: 'number'
            default: 20
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Annotation"
                  total:
                    type: "number"
        "405":
          description: "Invalid input"

  /annotations/{name}:
    get:
      tags:
        - "annotations"
      parameters:
        - in: 'path'
          name: 'name'
          required: true
          schema:
            type: 'string'
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotation"
        "404":
          description: "annotation not found"
          
  /taxons:
    get:
      tags:
        - "taxons"
      summary: "Endpoint to retrieve a paginated list of taxons"
      parameters:
        - in: 'query'
          name: 'filter'
          schema:  
            type: 'string'
        - in: 'query'
          name: 'rank'
          schema:
            type: 'string'
            enum: 
              - 'kingdom'
              - 'phylum'
              - 'class'
              - 'order'
              - 'family'
        - in: 'query'
          name: 'offset'
          schema:
            type: 'number'
            default: 0
        - in: 'query'
          name: 'limit'
          schema:
            type: 'number'
            default: 20
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/TaxonNode"
                  total:
                    type: "number"
        "405":
          description: "Invalid input"

  /taxons/{taxid}:
    get:
      tags:
        - "taxons"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:  
            type: 'string'
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaxonNode"
        "404":
          description: "Taxon not found"

  /taxons/{taxid}/coordinates:
    get:
      tags:
        - "taxons"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:  
            type: 'string'
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/SampleCoordinates"
        "404":
          description: "Taxon not found"
  
  /taxons/{taxid}/children:
    get:
      tags:
        - "taxons"
      parameters:
        - in: 'path'
          name: 'taxid'
          required: true
          schema:  
            type: 'string'
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/TaxonNode"
        "404":
          description: "Taxon not found"
        
components:
  schemas:
    Assembly:
      type: "object"
      description: "object containing the urls to download the gzipped masked genome and its indexed versions"
      properties:
        accession:
          type: "string"
        assembly_name:
          type: "string"
        taxid:
          type: "string"
        sample_accession:
          type: "string"
        scientific_name:
          type: "string"
        created:
          type: "string"
        chromosomes:
          type: "array"
          items:
            type: "string"
          description: "list of chromosome accessions"
        metadata:
          type: "object"
          description: "INSDC metadata"
  
    Annotation:
      type: "object"
      description: "object containing the urls to download the gzipped gff3 file"
      properties:
        name:
          type: "string"
          description: "annotation name"
        taxid:
          type: "string"
        assembly_accession:
          type: "string"
        links:
          type: "array"
          items:
            type: "string"
          description: "list of urls to download the related annotation files"
        metadata:
          type: "object"
          description: "user defined metadata object schema"
    
    Geometry:
      type: "object"
      properties:
        type:
          type: "string"
          default: "Point"
        coordinates:
          type: "array"
          items:
            type: "string"
    
    GeoLocation:
      type: "object"
      description: "geolocation object"
      properties:
        geo_location:
          type: "string"
          description: "lat:lon formatted string"
        type:
          type: "string"
          default: "Feature"
        organisms:
          type: "array"
          items:
            type: "string"
          description: "array of taxids"
        geometry:
          $ref: "#/components/schemas/Geometry"
          
    
    Experiment:
      type: "object"
      description: "Raw or Mapped experiments"
      properties:
        sample_accession:
          type: "string"
        experiment_accession:
          type: "string"
        instrument_platform:
          type: "string"
        instrument_model:
          type: "string"
        taxid:
          type: "string"
        scientific_name:
          type: "string"
        metadata:
          type: "object"
          description: "INSDC metadata"
    
    BioSample:
      type: "object"
      properties:
        assemblies:
          type: "array"
          items:
            type: "string"
        experiments:
          type: "array"
          items:
            type: "string"
        accession:
          type: "string"
        latitude:
          type: "string"
        longitude:
          type: "string"
        sub_samples:
          type: "array"
          items:
            type: "string"
          description: "list of related sample accessions"
        taxid:
          type: "string"
        scientific_name:
          type: "string"
        metadata:
          type: "object"
          description: "INSDC biosample metadata"

    LocalSample:
      type: "object"
      properties:
        local_id:
          type: "string"
        latitude:
          type: "string"
        longitude:
          type: "string"
        taxid:
          type: "string"
        scientific_name:
          type: "string"
        metadata:
          type: "object"
          description: "user defined metadata"
    
    GoaTSpecies:
      type: "object"
      properties:
        ncbi_taxon_id:
          type: "string"
        species:
          type: "string"
        subspecies:
          type: "string"
        family:
          type: "string"
        target_list_status:
          type: "string"
          enum:
            - "long_list"
            - "other_priority"
            - "family_representative"
        sequencing_status:
          type: "string"
          enum:
            - "sample_collected"
            - "sample_acquired"
            - "data_generation"
            - "in_assembly"
            - "insdc_open"
            - "publication_available"
        publication_id:
          type: "string"
          description: "DOI: enter the complete string, e.g., 10.1093/nar/gks1195. PubMed ID (PMID): use simple numbers, e.g., 23193287. PubMed CentralID (PMCID): include the ‘PMC’ prefix, e.g., PMC3531190. "
        
    GoaTReport:
      type: "object"
      description: "jsonized object of tsv GoaT report"
      properties:
        project_name:
          type: "string"
        subproject_name:
          type: "string"
        primary_contact:
          type: "string"
        primary_contact_institution:
          type: "string"
        primary_contact_email:
          type: "string"
        date_of_update:
          type: "string"
        schema_version:
          type: "string"
        rows:
          type: "array"
          items:
            $ref: "#/components/schemas/GoaTSpecies"
    
    GoaTStatus:
      type: "string"
      enum:
      - "Sample Collected"
      - "Sample Acquired"
      - "Data Generation"
      - "In Assembly"
      - "INSDC Submitted"
      - "Publication Available"
    
    INSDCStatus:
      type: "string"
      enum:
      - "Biosample Submitted"
      - "experiments Submitted"
      - "Assemblies Submitted"
    
    TargetListStatus:
      type: "string"
      enum:
        - "long_list"
        - "family_representative"
        - "other_priority"
    TreeNode:
      type: "object"
      properties:
        taxid: 
          type: "string"
        name:
          type: "string"
        rank:
          type: "string"
        leaves:
          type: "number"
        children:
          type: "array"
          items:
            $ref: "#/components/schemas/TreeNode"

    Publication:
      type: "object"
      properties:
        source:
          type: "string"
          enum:
            - "DOI"
            - "PubMed ID"
            - "PubMed CentralID"
        id:
          type: "string"
    
    CommonName:
      type: "object"
      properties:
        value:
          type: "string"
        lang:
          type: "string"
        locality:
          type: "string"
  
    TaxonNode:
      type: "object"
      properties:
        children:
          type: "array"
          items:
            type: "string"
          description: "list of taxid of the taxon node childrens"
        name:
          type: "string"
        rank: 
          type: "string"
        leaves:
          type: "number"
        taxid:
          type: "string"
    
    SampleCoordinates:
      type: "object"
      properties:
        taxid:
          type: "string"
        scientific_name:
          type: "string"
        sample_accession:
          type: "string"
        is_local_sample:
          type: "boolean"
        image:
          type: "string"
        coordinates:
          $ref: "#/components/schemas/Geometry"
  
    Organism:
      type: "object"
      properties:
        assemblies:
          type: "array"
          items:
            type: "string"
          description: "list of related assembly accessions"
        experiments:
          type: "array"
          items:
            type: "string"
          description: "list of related experiment (read) accessions"
        biosamples:
          type: "array"
          items:
            type: "string"
          description: "list of related biosamples accessions"
        local_samples:
          type: "array"
          items:
            type: "string"
          description: "list of related local samples"
        annotations:
          type: "array"
          items:
            type: "string"
          description: "list of related annotations"
        publications:
          type: "array"
          items:
            $ref: "#/components/schemas/Publication"
        tolid_prefix:
          type: "string"
        links:
          type: "array"
          items: 
            type: "string"
          description: "list of user defined organism related links"
        common_names:
          type: "array"
          items:
            $ref: "#/components/schemas/CommonName"
        coordinates:
          type: "array"
          items:
            type: "string"
        insdc_common_name:
          type: "string"
        scientific_name:
          type: "string"
          description: "organism name"
        taxid:
          type: "string"
          description: "NCBI taxonomic identifier"
        image:
          type: "string"
          description: "link to main image"
        image_urls:
          type: "array"
          items:
            type: "string"
        taxon_lineage:
          type: "array"
          items:
            type: "string"
          description: "asc list of taxIDs"
        goat_status:
          $ref: "#/components/schemas/GoaTStatus"
        insdc_status:
          $ref: "#/components/schemas/INSDCStatus"
        target_list_status:
          $ref: "#/components/schemas/TargetListStatus"
          
          